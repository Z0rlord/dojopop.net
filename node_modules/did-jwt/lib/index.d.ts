import SimpleSigner from 'did-jwt/lib/signers/SimpleSigner';
import EllipticSigner from 'did-jwt/lib/signers/EllipticSigner';
import NaclSigner from 'did-jwt/lib/signers/NaclSigner';
import { ES256KSigner } from 'did-jwt/lib/signers/ES256KSigner';
import { EdDSASigner } from 'did-jwt/lib/signers/EdDSASigner';
import { verifyJWT, createJWT, decodeJWT, verifyJWS, createJWS, Signer, JWTHeader, JWTPayload, JWTVerified } from 'did-jwt/lib/JWT';
import { toEthereumAddress } from 'did-jwt/lib/Digest';
export { JWE, createJWE, decryptJWE, Encrypter, Decrypter, ProtectedHeader, Recipient, RecipientHeader } from 'did-jwt/lib/JWE';
export { ECDH, createX25519ECDH } from 'did-jwt/lib/ECDH';
export { xc20pDirEncrypter, xc20pDirDecrypter, x25519Encrypter, x25519Decrypter, resolveX25519Encrypters, createAuthEncrypter, createAnonEncrypter, createAuthDecrypter, createAnonDecrypter, xc20pAuthEncrypterEcdh1PuV3x25519WithXc20PkwV2, xc20pAuthDecrypterEcdh1PuV3x25519WithXc20PkwV2, } from 'did-jwt/lib/xc20pEncryption';
export { SimpleSigner, EllipticSigner, NaclSigner, ES256KSigner, EdDSASigner, verifyJWT, createJWT, decodeJWT, verifyJWS, createJWS, toEthereumAddress, Signer, JWTHeader, JWTPayload, JWTVerified, };
export { JWTOptions, JWTVerifyOptions } from 'did-jwt/lib/JWT';
//# sourceMappingURL=index.d.ts.map